# debug=true
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss.SSS}t\t %m %s --- [ %I ]  %U \t: %B bytes in %D ms
# server.tomcat.accesslog.pattern=%t{yyyy-MM-dd HH:mm:ss.SSS}\t   %m %s --- [ %I ]  %U \t: %B bytes in %D ms
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.buffered=false
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=

# Mapper Scanning & ResultType 타입 해석 위치
mybatis.type-aliases-package=net.kubepia.sam.restapp.mybatis.model;net.kubepia.sam.restapp.mybatis
# Column vs Property Mapping first_name <-> firstName
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-result-set-type=FORWARD_ONLY
mybatis.configuration.default-statement-timeout=30

# xml mapper file 위치 지정
mybatis.mapper-locations: mybatis/**/*.xml


logging.level.net.kubepia.sam.restapp.mybatis=DEBUG
# logging.level.com.spring.ibatis=DEBUG

# db console 설정
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# datasource 설정
spring.datasource.url=jdbc:h2:mem:employees
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# 초기 테이블 생성
spring.sql.init.schema-locations=classpath*:database/schema.sql
# 초기 데이터 생성
spring.sql.init.data-locations=classpath*:database/data.sql

# app 실행시 initialize 실행 조건
spring.sql.init.mode=always

# api doc
# springdoc.swagger-ui.path=/swagger-ui.html
# springdoc.api-docs.enabled=false
# springdoc.swagger-ui.enabled=false